/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace BWAPI {

using System;
using System.Runtime.InteropServices;

public class UnitTypeWhatBuildsPair : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal UnitTypeWhatBuildsPair(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(UnitTypeWhatBuildsPair obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~UnitTypeWhatBuildsPair() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          bridgePINVOKE.delete_UnitTypeWhatBuildsPair(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public UnitTypeWhatBuildsPair() : this(bridgePINVOKE.new_UnitTypeWhatBuildsPair__SWIG_0(), true) {
  }

  public UnitTypeWhatBuildsPair(UnitType t, int u) : this(bridgePINVOKE.new_UnitTypeWhatBuildsPair__SWIG_1(UnitType.getCPtr(t), u), true) {
  }

  public UnitTypeWhatBuildsPair(UnitTypeWhatBuildsPair p) : this(bridgePINVOKE.new_UnitTypeWhatBuildsPair__SWIG_2(UnitTypeWhatBuildsPair.getCPtr(p)), true) {
    if (bridgePINVOKE.SWIGPendingException.Pending) throw bridgePINVOKE.SWIGPendingException.Retrieve();
  }

  public UnitType first {
    set {
      bridgePINVOKE.UnitTypeWhatBuildsPair_first_set(swigCPtr, UnitType.getCPtr(value));
    } 
    get {
      IntPtr cPtr = bridgePINVOKE.UnitTypeWhatBuildsPair_first_get(swigCPtr);
      UnitType ret = (cPtr == IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public int second {
    set {
      bridgePINVOKE.UnitTypeWhatBuildsPair_second_set(swigCPtr, value);
    } 
    get {
      int ret = bridgePINVOKE.UnitTypeWhatBuildsPair_second_get(swigCPtr);
      return ret;
    } 
  }

}

}
